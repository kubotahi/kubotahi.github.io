{"version":3,"sources":["webpack:///./src/views/22.vue?31a7","webpack:///./src/views/22.vue","webpack:///./src/views/22.vue?1903"],"names":["class","width","height","data","mounted","this","draw_Graph","methods","svg","d3","zg","append","node","selectAll","enter","attr","style","simulation","force","x","y","strength","radius","iterations","nodes","on","d","console","log","zoomed","transform","call","scaleExtent","render"],"mappings":"2IAAA,W,8DCCOA,MAAM,a,EAET,eAAqD,OAAhDA,MAAM,SAASC,MAAM,OAAOC,OAAO,Q,iDAF1C,eAIM,MAJN,EAIM,CAFJ,I,gBAQW,GACbC,KADa,WAEX,MAAO,IAGTC,QALa,WAMXC,KAAKC,cAEPC,QAAS,CACPD,WADO,WAEL,IAAIL,EAAQ,IACRC,EAAS,IAETM,EAAMC,EAAA,KAAU,WAIhBC,EAAMF,EAAIG,OAAO,KAGjBR,EAAO,CACT,CAAE,KAAQ,KACV,CAAE,KAAQ,KACV,CAAE,KAAQ,KACV,CAAE,KAAQ,KACV,CAAE,KAAQ,KACV,CAAE,KAAQ,KACV,CAAE,KAAQ,KACV,CAAE,KAAQ,KACV,CAAE,KAAQ,MACV,CAAE,KAAQ,MACV,CAAE,KAAQ,OAKRS,EAAOF,EACRG,UAAU,UACVV,KAAKA,GACLW,QACAH,OAAO,UACLI,KAAK,IAAK,IACVA,KAAK,KAAMd,EAAQ,GACnBc,KAAK,KAAMb,EAAS,GACpBc,MAAM,OAAQ,WACdA,MAAM,eAAgB,IACtBD,KAAK,SAAU,WACfC,MAAM,eAAgB,GAGvBC,EAAaR,EAAA,OACZS,MAAM,SAAUT,EAAA,OAAiBU,EAAElB,EAAQ,GAAGmB,EAAElB,EAAS,IACzDgB,MAAM,SAAUT,EAAA,OAAmBY,SAAS,KAC5CH,MAAM,UAAWT,EAAA,OAAkBY,SAAS,KAAKC,OAAO,IAAIC,WAAW,IAI5EN,EACKO,MAAMrB,GACNsB,GAAG,QAAQ,SAASC,GACnBC,QAAQC,IAAIF,GACZd,EACKG,KAAK,MAAM,SAASW,GAAI,OAAOA,EAAEP,KACjCJ,KAAK,MAAM,SAASW,GAAI,OAAOA,EAAEN,QAK5C,IAAIS,EAAS,WACXnB,EAAGK,KAAK,YAAaN,EAAA,KAASqB,YAEhCtB,EAAIuB,KAAKtB,EAAA,OACNuB,YAAY,CAAC,GAAO,KACpBP,GAAG,OAAQI,O,UC/EpB,EAAOI,OAASA,EAED","file":"js/chunk-fc41d26e.707d3f60.js","sourcesContent":["export { default } from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./22.vue?vue&type=style&index=0&lang=css\"; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./22.vue?vue&type=style&index=0&lang=css\"","<template>\n  <div class=\"container\">\n\n    <svg class=\"svg_g1\" width=\"100%\" height=\"100%\"></svg>\n\n  </div>\n</template>\n\n<script>\nimport * as d3 from 'd3'\n\nexport default {\n  data() {\n    return {\n    }\n  },\n  mounted () {\n    this.draw_Graph()\n  },\n  methods: {\n    draw_Graph() {\n      let width = 400;\n      let height = 400;\n\n      let svg = d3.select('.svg_g1')\n      //let g = svg.append('g')\n\n      //ズーム対象とするレイヤーを生成\t\n      var zg  = svg.append(\"g\")\n\n      // create dummy data -> just one element per circle\n      var data = [\n        { \"name\": \"A\" },\n        { \"name\": \"B\" },\n        { \"name\": \"C\" },\n        { \"name\": \"D\" },\n        { \"name\": \"E\" },\n        { \"name\": \"F\" },\n        { \"name\": \"G\" },\n        { \"name\": \"H\" },\n        { \"name\": \"A1\" },\n        { \"name\": \"A2\" },\n        { \"name\": \"A3\" },\n        ]\n\n      // Initialize the circle: all located at the center of the svg area\n      //var node = svg.append(\"g\")\n      var node = zg\n        .selectAll(\"circle\")\n        .data(data)\n        .enter()\n        .append(\"circle\")\n          .attr(\"r\", 25)\n          .attr(\"cx\", width / 2)\n          .attr(\"cy\", height / 2)\n          .style(\"fill\", \"#69b3a2\")\n          .style(\"fill-opacity\", 0.3)\n          .attr(\"stroke\", \"#69a2b2\")\n          .style(\"stroke-width\", 4)\n\n      // Features of the forces applied to the nodes:\n      var simulation = d3.forceSimulation()\n          .force(\"center\", d3.forceCenter().x(width / 2).y(height / 2)) // Attraction to the center of the svg area\n          .force(\"charge\", d3.forceManyBody().strength(0.5)) // Nodes are attracted one each other of value is > 0\n          .force(\"collide\", d3.forceCollide().strength(.01).radius(30).iterations(1)) // Force that avoids circle overlapping\n\n      // Apply these forces to the nodes and update their positions.\n      // Once the force algorithm is happy with positions ('alpha' value is low enough), simulations will stop.\n      simulation\n          .nodes(data)\n          .on(\"tick\", function(d){\n            console.log(d)\n            node\n                .attr(\"cx\", function(d){ return d.x; })\n                .attr(\"cy\", function(d){ return d.y; })\n          })\n\n\n      //ズーム時の処理を設定\n      let zoomed = function() {\n        zg.attr(\"transform\", d3.event.transform);\n      }\n      svg.call(d3.zoom()\n        .scaleExtent([1 / 2, 12])\n        .on(\"zoom\", zoomed));\t\n\n    }\n  }\n}\n\n</script>\n<style>\n</style>\n","import { render } from \"./22.vue?vue&type=template&id=b1c9e3e4\"\nimport script from \"./22.vue?vue&type=script&lang=js\"\nexport * from \"./22.vue?vue&type=script&lang=js\"\n\nimport \"./22.vue?vue&type=style&index=0&lang=css\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}